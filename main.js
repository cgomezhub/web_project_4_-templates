!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,r){if("object"!==e(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function e(t,r){var n=t.data,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=n,this._renderer=o,this._container=document.querySelector(r)}var r,n;return r=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}}])&&t(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),e}();function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var i=function(){function e(t,r){var n=t.image,o=t.place,i=t.altImage;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._image=n,this._altImage=i,this._place=o,this._cardSelector=r}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._element.querySelector(".card__place").textContent=this._place,this._element.querySelector(".card__image").src=this._image,this._element.querySelector(".card__image").alt=this._altImage,this._setEventListeners(),this._element}},{key:"_like",value:function(e){e.target.classList.toggle("card__heart_active")}},{key:"_handleRemoveCard",value:function(){this._element.style.display="none"}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".card__heart").addEventListener("click",(function(t){e._like(t)})),this._element.querySelector(".card__trash").addEventListener("click",(function(){e._handleRemoveCard()}))}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),c=document.querySelector(".button-edit"),a=(document.getElementById("popup-profile"),document.querySelector(".form__close"),document.getElementById("text-input-name"),document.getElementById("text-input-about"),document.querySelector(".profile__name")),u=document.querySelector(".profile__about"),l=document.querySelector(".button-place"),s=(document.getElementById("popup-add"),document.getElementById("add-form-close"),document.getElementById("text-input-place"),document.getElementById("url-input-image"),document.querySelector(".cards")),f=(document.querySelector(".card__image"),document.getElementById("popup-image"),document.querySelector(".popup__image"),document.querySelector(".popup__place"),document.querySelector(".images-expand__close"),document.querySelector(".form")),p=document.querySelector(".form__input"),y=(document.querySelector(".popup"),document.querySelector(".popups")),m=document.querySelector(".popups__image"),d=document.querySelector(".popups__add"),v=document.querySelector(".popups-user-info");function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function b(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==_(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===_(o)?o:String(o)),n)}var o}document.querySelector("#button-user-form"),document.querySelector("#button-add-form");var h=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=t,this._inputSelector=p}var t,r;return t=e,r=[{key:"_showError",value:function(e,t,r){var n=e.querySelector(".".concat(t.id,"-error"));t.classList.add("form__input_type_error"),n.textContent=r,n.classList.add("form__error_active")}},{key:"_hideError",value:function(e,t){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.remove("form__input_type_error"),r.classList.remove("form__error_active"),r.textContent=""}},{key:"_checkInputValidity",value:function(e,t){t.validity.valid?this._hideError(e,t):this._showError(e,t,t.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add("form__button_inactive"),document.addEventListener("keydown",(function(e){"Enter"===e.key&&e.preventDefault()}))):t.classList.remove("form__button_inactive")}},{key:"_setEventListeners",value:function(e){var t=this,r=Array.from(e.querySelectorAll(".form__input")),n=e.querySelector(".form__button");this._toggleButtonState(r,n),r.forEach((function(o){o.addEventListener("input",(function(){t._checkInputValidity(e,o),t._toggleButtonState(r,n)}))}))}},{key:"enableValidation",value:function(){var e=this;Array.from(document.querySelectorAll(".form")).forEach((function(t){t.addEventListener("submit",(function(e){e.preventDefault()})),e._setEventListeners(t)}))}}],r&&b(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function S(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==g(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==g(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===g(o)?o:String(o)),n)}var o}new h(f).enableValidation();var w=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selectorPopup=t}var t,r;return t=e,(r=[{key:"open",value:function(){y.classList.add("active")}},{key:"close",value:function(){y.classList.remove("active")}},{key:"_handleEscClose",value:function(e){"Escape"===e&&y.classList.remove("active")}},{key:"setEventListeners",value:function(){var e=this;this._element.querySelector(".form__close").addEventListener("click",this.close),y.addEventListener("click",(function(t){t.target===y&&e.close()})),document.addEventListener("keydown",(function(t){"Escape"===t.key&&e.close()}))}}])&&S(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function k(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==E(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==E(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===E(o)?o:String(o)),n)}var o}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},q.apply(this,arguments)}function L(e,t){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},L(e,t)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(c,e);var t,r,n,o,i=(n=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(n);if(o){var r=x(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),i.call(this,e)}return t=c,(r=[{key:"_getTemplatePopup",value:function(){return document.querySelector(this._selectorPopup).content.querySelector(".popup__container").cloneNode(!0)}},{key:"_generatePopup",value:function(){return this._element=this._getTemplatePopup(),this._element}},{key:"_close",value:function(){m.classList.remove("active")}},{key:"_setEventListeners",value:function(){var e=this;q(x(c.prototype),"setEventListeners",this).call(this),this._element.querySelector(".form__close").addEventListener("click",(function(){q(x(c.prototype),"close",e).call(e),e._close()})),m.addEventListener("click",(function(t){t.target===m&&(q(x(c.prototype),"close",e).call(e),e._close())})),document.addEventListener("keydown",(function(t){"Escape"===t.key&&(q(x(c.prototype),"close",e).call(e),e._close())}))}},{key:"open",value:function(e){var t=e.src,r=e.alt,n=e.text;q(x(c.prototype),"open",this).call(this),m.classList.add("active"),this._element.querySelector(".popup__image").src=t,this._element.querySelector(".popup__image").alt=r,this._element.querySelector(".popup__place").textContent=n,m.append(this._element),this._setEventListeners()}}])&&k(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(w);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function O(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==j(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==j(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===j(o)?o:String(o)),n)}var o}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},D.apply(this,arguments)}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(c,e);var t,r,n,o,i=(n=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(n);if(o){var r=B(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),i.call(this,e)}return t=c,(r=[{key:"_getInputValues",value:function(){return document.querySelector(this._selectorPopup).content.querySelector("#add-form").cloneNode(!0)}},{key:"_generateFormPopup",value:function(){return this._element=this._getInputValues(),this._element}},{key:"_handleAddFormSubmit",value:function(e){e.preventDefault();var t=document.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__image"),n=t.querySelector(".card__place"),o=t.querySelector(".card__heart"),i=t.querySelector(".card__trash"),c=document.querySelector("#add-form"),a=document.getElementById("text-input-place"),u=document.getElementById("url-input-image");r.src=u.value,r.alt="imagen de ".concat(u.value),n.textContent=a.value,o.addEventListener("click",(function(e){e.target.classList.toggle("card__heart_active")})),i.addEventListener("click",(function(){t.style.display="none"})),s.prepend(t),d.classList.remove("active"),y.classList.remove("active"),c.reset()}},{key:"_close",value:function(){d.classList.remove("active")}},{key:"_setEventListeners",value:function(){var e=this,t=document.querySelector("#add-form");D(B(c.prototype),"setEventListeners",this).call(this),this._element.querySelector(".form__close").addEventListener("click",(function(){D(B(c.prototype),"close",e).call(e),e._close()})),d.addEventListener("click",(function(t){t.target===d&&(D(B(c.prototype),"close",e).call(e),e._close())})),document.addEventListener("keydown",(function(t){"Escape"===t.key&&(D(B(c.prototype),"close",e).call(e),e._close())})),t.addEventListener("submit",this._handleAddFormSubmit)}},{key:"_open",value:function(){D(B(c.prototype),"open",this).call(this),d.classList.add("active"),d.append(this._element),this._setEventListeners()}}])&&O(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(w);function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function M(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==T(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==T(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===T(o)?o:String(o)),n)}var o}var A=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selectorUser=t}var t,r;return t=e,(r=[{key:"_getTemplateUser",value:function(){return document.querySelector(this._selectorUser).content.querySelector("#profile-form").cloneNode(!0)}},{key:"_generateUser",value:function(){return this._element=this._getTemplateUser(),this._element}},{key:"_handleUserFormSubmit",value:function(e){e.preventDefault();var t=document.querySelector("#text-input-name"),r=document.querySelector("#text-input-about"),n=document.querySelector("#profile-form");a.textContent=t.value,u.textContent=r.value,v.classList.remove("active"),n.reset(),y.classList.remove("active")}},{key:"_close",value:function(){v.classList.remove("active")}},{key:"_setEventListeners",value:function(){var e=this,t=document.querySelector("#profile-form");this._element.querySelector(".form__close").addEventListener("click",this._close),v.addEventListener("click",(function(t){t.target===v&&e._close()})),document.addEventListener("keydown",(function(t){"Escape"===t.key&&e._close()})),v.addEventListener("click",(function(t){t.target===v&&e._close()})),t.addEventListener("submit",this._handleUserFormSubmit)}},{key:"_open",value:function(){v.classList.add("active"),console.log(this._element);var e=this._element.querySelector("#text-input-name"),t=this._element.querySelector("#text-input-about");e.value=a.textContent,t.value=u.textContent,v.append(this._element),this._setEventListeners()}}])&&M(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),R=new r({data:[{image:"https://images.unsplash.com/photo-1666831268439-376e34c4de0d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1964&q=80",altImage:"imagen de la Montana de Yosemite",place:"Montana de Yosemite"},{image:"https://images.unsplash.com/photo-1618595723314-c54d51d6e043?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1220&q=80",altImage:"imagen de Los Arcos",place:"Los Arcos"},{image:"https://images.unsplash.com/photo-1657589809154-8212431ee6c1?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=870&q=80",altImage:"imagen del Canon Bryce",place:"Canon Bryce"},{image:"https://images.unsplash.com/photo-1615405147358-f17791e21fcd?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=870&q=80",altImage:"imagen del parque nacional Zion",place:"Parque Nacional Zion"},{image:"https://images.unsplash.com/photo-1678806922638-27bf485490ae?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1031&q=80",altImage:"imagen del parque nacional Denali",place:"Parque Nacional Denali"},{image:"https://images.unsplash.com/photo-1643252494989-81cd0b5bead2?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1887&q=80",altImage:"imagen del gran canon",place:"Gran Canon"}],renderer:function(e){var t=new i(e,".card-template").generateCard();R.addItem(t)}},".cards");R.renderItems();var H=new P(".popup-image-template");H._generatePopup(),document.addEventListener("click",(function(e){if(e.target.classList.contains("card__image")){var t=e.target.parentElement.querySelector(".card__place"),r={src:e.target.src,alt:e.target.alt,text:t.textContent};H.open(r)}}));var V=new C(".popup-form-template");V._generateFormPopup(),l.addEventListener("click",(function(){V._open(),console.log("viene PopupWith"),new h(".form").enableValidation()}));var G=new A(".popup-user-template");G._generateUser(),console.log("entro UserInfo"),c.addEventListener("click",(function(){G._open(),new h(".form").enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,