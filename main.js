!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,r){if("object"!==e(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function e(t,r){var n=t.data,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=n,this._renderer=o,this._container=document.querySelector(r)}var r,n;return r=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}}])&&t(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),e}(),n=(document.getElementById("popup-profile"),document.querySelector(".form__close"),document.querySelector("#text-input-name"),document.querySelector("#text-input-about"),document.querySelector(".profile__name")),o=document.querySelector(".profile__about"),i=document.querySelector(".button-edit"),c=document.querySelector(".button-place"),a=(document.getElementById("popup-add"),document.getElementById("add-form-close"),document.querySelector("#text-input-place"),document.querySelector("#url-input-image"),document.querySelector(".cards")),u=(document.querySelector(".card__link"),document.querySelector(".card__name"),document.getElementById("popup-image"),document.querySelector(".popup__image"),document.querySelector(".popup__place"),document.querySelector(".images-expand__close"),document.querySelector(".form")),l=document.querySelector(".form__input"),s=(document.querySelector(".popup"),document.querySelector(".popups")),f=document.querySelector(".popups__image"),y=document.querySelector(".popups__add"),d=document.querySelector(".popups-user-info"),p=document.querySelector(".popup-erase"),m=(document.querySelector(".popup-erase__confirm"),document.querySelector("#text-input-name"),document.querySelector("#text-input-about"),document.querySelector(".profile__avatar")),v=document.querySelector(".popup-avatar"),_=document.querySelector(".profile__avatar-edit"),h=document.querySelector("#button-avatar-save"),b=document.querySelector("#button-avatar-saving");function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function k(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==S(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==S(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===S(o)?o:String(o)),n)}var o}var g=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers}var t,r;return t=e,(r=[{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: "+e.status)})).catch((function(e){console.log(e)}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: "+e.status)})).catch((function(e){console.log(e)}))}},{key:"editPerfil",value:function(e){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Error: "+e.status)})).catch((function(e){console.log(e)}))}},{key:"addOrDeleteCard",value:function(e,t,r){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:t,headers:this.headers,body:JSON.stringify(r)}).then((function(e){return e.ok?e.json():Promise.reject("Error: "+e.status)})).catch((function(e){console.log(e)}))}},{key:"addCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Error: "+e.status)})).catch((function(e){console.log(e)}))}},{key:"addOrDeleteLike",value:function(e,t){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:t,headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: "+e.status)})).catch((function(e){console.log(e)}))}},{key:"editAvatar",value:function(e){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Error: "+e.status)})).catch((function(e){console.log(e)}))}}])&&k(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function w(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==E(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==E(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===E(o)?o:String(o)),n)}var o}var L=new g({baseUrl:"https://around.nomoreparties.co/v1/web_es_09",headers:{authorization:"24db7356-9f7a-470a-979e-9ec3f25f6f02","Content-Type":"application/json"}}),q=function(){function e(t,r,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._link=t.link,this._name=t.name,this._likes=t.likes,this._ownerId=t.owner._id,this._ownerName=t.owner.name,this._cardId=t._id,this._userId=r._id,this._userName=r.name,this._user=r,this._cardSelector=n,this._cardItem=t}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){var e=this;return this._element=this._getTemplate(),this._element.querySelector(".card__name").textContent=this._name,this._element.querySelector(".card__link").src=this._link,this._element.querySelector(".card__link").alt="imagen de ".concat(this._name),this._userId===this._ownerId&&this._element.querySelector(".card__trash").classList.add("card__trash_active"),this._element.querySelector(".card__like-count").textContent=this._likes.length,this._userId===this._ownerId&&this._element.querySelector(".card__trash").classList.add("card__trash_active"),this._likes.some((function(t){return t._id===e._userId}))&&this._element.querySelector(".card__heart").classList.add("card__heart_active"),this._setEventListeners(),this._element}},{key:"_like",value:function(e){e.target.classList.toggle("card__heart_active")}},{key:"_closePopupErase",value:function(){p.classList.remove("active")}},{key:"_setEventListeners",value:function(){var e=this,t=this._element.querySelector(".card__trash"),r=document.querySelector(".popup-erase__close"),n=document.querySelector(".popup-erase__confirm"),o=function(){var t=e._cardId;L.addOrDeleteCard(t,"DELETE").then((function(){e._element.style.display="none",p.classList.remove("active")}))};t.addEventListener("click",(function(){p.classList.add("active"),n.addEventListener("click",o)})),r.addEventListener("click",(function(){e._closePopupErase(),n.removeEventListener("click",o)})),p.addEventListener("click",(function(t){t.target===p&&e._closePopupErase(),n.removeEventListener("click",o)})),document.addEventListener("keydown",(function(t){"Escape"===t.key&&e._closePopupErase(),n.removeEventListener("click",o)})),this._element.querySelector(".card__heart").addEventListener("click",(function(){var t=e._cardId;console.log(t),e._likes.some((function(t){return t._id===e._userId}))?L.addOrDeleteLike(t,"DELETE").then((function(t){e._likes=t.likes,e._element.querySelector(".card__like-count").textContent=e._likes.length,e._element.querySelector(".card__heart").classList.remove("card__heart_active")})):L.addOrDeleteLike(t,"PUT").then((function(t){e._likes=t.likes,e._element.querySelector(".card__like-count").textContent=e._likes.length,e._element.querySelector(".card__heart").classList.add("card__heart_active")}))}))}}])&&w(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function j(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==P(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==P(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===P(o)?o:String(o)),n)}var o}var O=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=t,this._inputSelector=l}var t,r;return t=e,r=[{key:"_showError",value:function(e,t,r){var n=e.querySelector(".".concat(t.id,"-error"));t.classList.add("form__input_type_error"),n.textContent=r,n.classList.add("form__error_active")}},{key:"_hideError",value:function(e,t){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.remove("form__input_type_error"),r.classList.remove("form__error_active"),r.textContent=""}},{key:"_checkInputValidity",value:function(e,t){t.validity.valid?this._hideError(e,t):this._showError(e,t,t.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add("form__button_inactive"),document.addEventListener("keydown",(function(e){"Enter"===e.key&&e.preventDefault()}))):t.classList.remove("form__button_inactive")}},{key:"_setEventListeners",value:function(e){var t=this,r=Array.from(e.querySelectorAll(".form__input")),n=e.querySelector(".form__button");this._toggleButtonState(r,n),r.forEach((function(o){o.addEventListener("input",(function(){t._checkInputValidity(e,o),t._toggleButtonState(r,n)}))}))}},{key:"enableValidation",value:function(){var e=this;Array.from(document.querySelectorAll(".form")).forEach((function(t){t.addEventListener("submit",(function(e){e.preventDefault()})),e._setEventListeners(t)}))}}],r&&j(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function T(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==C(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==C(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===C(o)?o:String(o)),n)}var o}new O(u).enableValidation();var x=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selectorPopup=t}var t,r;return t=e,(r=[{key:"open",value:function(){s.classList.add("active")}},{key:"close",value:function(){s.classList.remove("active")}},{key:"_handleEscClose",value:function(e){"Escape"===e&&s.classList.remove("active")}},{key:"setEventListeners",value:function(){var e=this;this._element.querySelector(".form__close").addEventListener("click",this.close),s.addEventListener("click",(function(t){t.target===s&&e.close()})),document.addEventListener("keydown",(function(t){"Escape"===t.key&&e.close()}))}}])&&T(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function U(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==I(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==I(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===I(o)?o:String(o)),n)}var o}function A(){return A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},A.apply(this,arguments)}function D(e,t){return D=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},D(e,t)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}var N=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&D(e,t)}(c,e);var t,r,n,o,i=(n=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(n);if(o){var r=R(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===I(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),i.call(this,e)}return t=c,(r=[{key:"_getTemplatePopup",value:function(){return document.querySelector(this._selectorPopup).content.querySelector(".popup__container").cloneNode(!0)}},{key:"_generatePopup",value:function(){return this._element=this._getTemplatePopup(),this._element}},{key:"_close",value:function(){f.classList.remove("active")}},{key:"_setEventListeners",value:function(){var e=this;A(R(c.prototype),"setEventListeners",this).call(this),this._element.querySelector(".form__close").addEventListener("click",(function(){A(R(c.prototype),"close",e).call(e),e._close()})),f.addEventListener("click",(function(t){var r=document.querySelector(".popup__container");(t.target===f||r)&&(A(R(c.prototype),"close",e).call(e),e._close())})),document.addEventListener("keydown",(function(t){"Escape"===t.key&&(A(R(c.prototype),"close",e).call(e),e._close())}))}},{key:"open",value:function(e){var t=e.src,r=e.alt,n=e.text;A(R(c.prototype),"open",this).call(this),f.classList.add("active"),this._element.querySelector(".popup__image").src=t,this._element.querySelector(".popup__image").alt=r,this._element.querySelector(".popup__place").textContent=n,f.append(this._element),this._setEventListeners()}}])&&U(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(x);function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function F(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==B(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==B(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===B(o)?o:String(o)),n)}var o}function V(){return V="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=J(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},V.apply(this,arguments)}function z(e,t){return z=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},z(e,t)}function J(e){return J=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},J(e)}var H=new g({baseUrl:"https://around.nomoreparties.co/v1/web_es_09",headers:{authorization:"24db7356-9f7a-470a-979e-9ec3f25f6f02","Content-Type":"application/json"}}),M=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&z(e,t)}(c,e);var t,r,n,o,i=(n=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=J(n);if(o){var r=J(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===B(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),i.call(this,e)}return t=c,(r=[{key:"_getInputValues",value:function(){return document.querySelector(this._selectorPopup).content.querySelector("#add-form").cloneNode(!0)}},{key:"_generateFormPopup",value:function(){return this._element=this._getInputValues(),this._element}},{key:"_handleAddFormSubmit",value:function(e){e.preventDefault();var t=document.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__link"),n=t.querySelector(".card__name"),o=t.querySelector(".card__heart"),i=t.querySelector(".card__trash"),c=t.querySelector(".card__like-count"),u=document.querySelector("#button-add-save"),l=document.querySelector("#button-add-saving"),f=document.querySelector("#add-form"),d=document.querySelector("#text-input-place"),p=document.querySelector("#url-input-image");r.src=p.value,r.alt="imagen de ".concat(p.value),n.textContent=d.value,o.classList.remove("card__heart_active"),i.classList.add("card__trash_active"),c.textContent="0";var m={link:r.src,name:n.textContent};u.style.display="none",l.style.display="block",u.style.pointer="none",H.addCard(m).then((function(e){console.log(e),u.style.display="block",l.style.display="none",y.classList.remove("active"),s.classList.remove("active"),H.getInitialCards(),f.reset()})),o.addEventListener("click",(function(e){e.target.classList.toggle("card__heart_active")})),a.prepend(t),t.style.display="flex"}},{key:"_close",value:function(){y.classList.remove("active")}},{key:"_setEventListeners",value:function(){var e=this,t=document.querySelector("#add-form");V(J(c.prototype),"setEventListeners",this).call(this),this._element.querySelector(".form__close").addEventListener("click",(function(){V(J(c.prototype),"close",e).call(e),e._close()})),y.addEventListener("click",(function(t){t.target===y&&(V(J(c.prototype),"close",e).call(e),e._close())})),document.addEventListener("keydown",(function(t){"Escape"===t.key&&(V(J(c.prototype),"close",e).call(e),e._close())})),document.addEventListener("keydown",(function(e){"Enter"===e.key&&e.preventDefault()})),t.addEventListener("submit",this._handleAddFormSubmit),t.addEventListener("keydown",function(e){"Enter"===e.key&&(e.preventDefault(),this._handleAddFormSubmit(e))}.bind(this))}},{key:"_open",value:function(){V(J(c.prototype),"open",this).call(this),y.classList.add("active"),y.append(this._element),this._setEventListeners()}}])&&F(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(x);function G(e){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},G(e)}function K(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==G(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==G(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===G(o)?o:String(o)),n)}var o}var Q=new g({baseUrl:"https://around.nomoreparties.co/v1/web_es_09",headers:{authorization:"24db7356-9f7a-470a-979e-9ec3f25f6f02","Content-Type":"application/json"}}),W=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selectorUser=t}var t,r;return t=e,(r=[{key:"_getTemplateUser",value:function(){return document.querySelector(this._selectorUser).content.querySelector("#profile-form").cloneNode(!0)}},{key:"_generateUser",value:function(){return this._element=this._getTemplateUser(),this._element}},{key:"_handleUserFormSubmit",value:function(e){e.preventDefault();var t=document.querySelector("#text-input-name"),r=document.querySelector("#text-input-about");n.textContent=t.value,o.textContent=r.value;var i=document.querySelector("#button-user-save"),c=document.querySelector("#button-user-saving"),a={name:n.textContent,about:o.textContent};c.style.display="block",i.style.display="none",Q.editPerfil(a).then((function(){i.style.display="block",c.style.display="none",d.classList.remove("active")}))}},{key:"_close",value:function(){d.classList.remove("active")}},{key:"_setEventListeners",value:function(){var e=this,t=document.querySelector("#profile-form");this._element.querySelector(".form__close").addEventListener("click",this._close),d.addEventListener("click",(function(t){t.target===d&&e._close()})),document.addEventListener("keydown",(function(t){"Escape"===t.key&&e._close()})),t.addEventListener("submit",this._handleUserFormSubmit),t.addEventListener("keydown",function(e){"Enter"===e.key&&(e.preventDefault(),this._handleUserFormSubmit(e))}.bind(this))}},{key:"_open",value:function(){d.classList.add("active");var e=this._element.querySelector("#text-input-name"),t=this._element.querySelector("#text-input-about");e.value=n.textContent,t.value=o.textContent,d.append(this._element),this._setEventListeners()}}])&&K(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function X(e){return X="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},X(e)}function Y(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==X(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==X(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===X(o)?o:String(o)),n)}var o}var Z=new g({baseUrl:"https://around.nomoreparties.co/v1/web_es_09",headers:{authorization:"24db7356-9f7a-470a-979e-9ec3f25f6f02","Content-Type":"application/json"}}),$=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selectorAvatar=t}var t,r;return t=e,(r=[{key:"_getTemplateAvatar",value:function(){return document.querySelector("#avatar-form").cloneNode(!0)}},{key:"_generateAvatar",value:function(){return this._element=this._getTemplateAvatar(),this._element}},{key:"_close",value:function(){v.classList.remove("active")}},{key:"renderLoading",value:function(e){e?(h.style.display="none",b.style.display="block"):(h.style.display="block",b.style.display="none")}},{key:"_handleAvatarSubmit",value:function(e){e.preventDefault();var t=document.querySelector("#url-input-avatar"),r=document.querySelector("#avatar-form");m.src=t.value;var n={avatar:m.src};h.style.display="none",b.style.display="block",Z.editAvatar(n).then((function(){h.style.display="block",b.style.display="none",v.classList.remove("active")})),r.reset()}},{key:"_setEventListeners",value:function(){var e=this,t=document.querySelector("#avatar-form");document.querySelector("#avatar-form-close").addEventListener("click",this._close),v.addEventListener("click",(function(t){t.target===v&&e._close()})),document.addEventListener("keydown",(function(t){"Escape"===t.key&&e._close()})),t.addEventListener("submit",this._handleAvatarSubmit),t.addEventListener("keydown",function(e){"Enter"===e.key&&(e.preventDefault(),this._handleAvatarSubmit(e))}.bind(this))}},{key:"_open",value:function(){v.classList.add("active"),this._setEventListeners()}}])&&Y(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),ee=new g({baseUrl:"https://around.nomoreparties.co/v1/web_es_09",headers:{authorization:"24db7356-9f7a-470a-979e-9ec3f25f6f02","Content-Type":"application/json"}});ee.getInitialCards().then((function(e){ee.getUserInfo().then((function(t){n.textContent=t.name,o.textContent=t.about,m.src=t.avatar;var i=new r({data:e,renderer:function(e){var r=new q(e,t,".card-template").generateCard();i.addItem(r)}},".cards");i.renderItems()}))}));var te=new W(".popup-user-template");te._generateUser(),i.addEventListener("click",(function(){te._open(),new O(".form").enableValidation()}));var re=new $(".popup-Avatar");re._generateAvatar(),_.addEventListener("click",(function(){re._open()}));var ne=new N(".popup-image-template");ne._generatePopup(),document.addEventListener("click",(function(e){if(e.target.classList.contains("card__link")){var t=e.target.parentElement.querySelector(".card__name"),r={src:e.target.src,alt:e.target.alt,text:t.textContent};ne.open(r)}}));var oe=new M(".popup-form-template");oe._generateFormPopup(),c.addEventListener("click",(function(){oe._open(),new O(".form").enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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L1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3AvLi9zcmMvY29tcG9uZW50cy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3AvLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3AvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3AvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3AvLi9zcmMvY29tcG9uZW50cy9BdmF0YXIuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3AvLi9zcmMvcGFnZS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3IoeyBkYXRhLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xuICAgIHRoaXMuX3JlbmRlcmVkSXRlbXMgPSBkYXRhO1xuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XG5cbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgfVxuXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5hcHBlbmQoZWxlbWVudCk7XG4gIH1cblxuICByZW5kZXJJdGVtcygpIHtcbiAgICB0aGlzLl9yZW5kZXJlZEl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xuICAgIH0pO1xuICB9XG59XG4iLCJjb25zdCBwb3B1cFByb2ZpbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncG9wdXAtcHJvZmlsZScpO1xuY29uc3QgcHJvZmlsZUZvcm1DbG9zZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX19jbG9zZScpO1xuY29uc3QgcHJvZmlsZUZvcm1JbnB1dE5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGV4dC1pbnB1dC1uYW1lJyk7XG5jb25zdCBwcm9maWxlRm9ybUlucHV0QWJvdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGV4dC1pbnB1dC1hYm91dCcpO1xuY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fbmFtZScpO1xuY29uc3QgcHJvZmlsZUFib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2Fib3V0Jyk7XG5cbmNvbnN0IGJ1dHRvbkVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnV0dG9uLWVkaXQnKTtcbmNvbnN0IGJ1dHRvblBsYWNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ1dHRvbi1wbGFjZScpO1xuXG5jb25zdCBwb3B1cEFkZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwb3B1cC1hZGQnKTtcbmNvbnN0IHBvcHVwQWRkQ2xvc2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWRkLWZvcm0tY2xvc2UnKTtcblxuY29uc3QgcG9wdXBBZGRJbnB1dFBsYWNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RleHQtaW5wdXQtcGxhY2UnKTtcbmNvbnN0IHBvcHVwQWRkSW5wdXRIdHRwcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN1cmwtaW5wdXQtaW1hZ2UnKTtcblxuY29uc3QgY2FyZHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZHMnKTtcbmNvbnN0IGNhcmRMaW5rID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2xpbmsnKTtcbmNvbnN0IGNhcmROYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX25hbWUnKTtcblxuY29uc3QgcG9wdXBJbWFnZVNlbGVjdG9yID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BvcHVwLWltYWdlJyk7XG5jb25zdCBwb3B1cEltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbWFnZScpO1xuY29uc3QgcG9wdXBQbGFjZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fcGxhY2UnKTtcbmNvbnN0IGltYWdlc0V4cGFuZENsb3NlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmltYWdlcy1leHBhbmRfX2Nsb3NlJyk7XG5cbmNvbnN0IGZvcm1TZWxlY3RvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb3JtJyk7XG5jb25zdCBpbnB1dFNlbGVjdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm1fX2lucHV0Jyk7XG5cbmNvbnN0IHBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwJyk7XG5cbmNvbnN0IHBvcHVwcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cHMnKTtcbmNvbnN0IHBvcHVwc0ltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwc19faW1hZ2UnKTtcbmNvbnN0IHBvcHVwc0FkZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cHNfX2FkZCcpO1xuY29uc3QgcG9wdXBzVXNlckluZm8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBzLXVzZXItaW5mbycpO1xuXG5jb25zdCBwb3B1cEVyYXNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwLWVyYXNlJyk7XG5jb25zdCBwb3B1cEVyYXNlQ29uZmlybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cC1lcmFzZV9fY29uZmlybScpO1xuXG5jb25zdCBpbnB1dE5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGV4dC1pbnB1dC1uYW1lJyk7XG5jb25zdCBpbnB1dEpvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0ZXh0LWlucHV0LWFib3V0Jyk7XG5cbmNvbnN0IHByb2ZpbGVBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYXZhdGFyJyk7XG5jb25zdCBwb3B1cEF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cC1hdmF0YXInKTtcblxuY29uc3QgcHJvZmlsZUF2YXRhckVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYXZhdGFyLWVkaXQnKTtcblxuY29uc3QgYnV0dG9uQXZhdGFyU2F2ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNidXR0b24tYXZhdGFyLXNhdmUnKTtcbmNvbnN0IGJ1dHRvbkF2YXRhclNhdmluZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNidXR0b24tYXZhdGFyLXNhdmluZycpO1xuXG5leHBvcnQge1xuICBidXR0b25FZGl0LFxuICBwb3B1cFByb2ZpbGUsXG4gIHByb2ZpbGVGb3JtQ2xvc2UsXG4gIHByb2ZpbGVGb3JtSW5wdXROYW1lLFxuICBwcm9maWxlRm9ybUlucHV0QWJvdXQsXG4gIGJ1dHRvblBsYWNlLFxuICBwb3B1cEFkZCxcbiAgcG9wdXBBZGRDbG9zZSxcbiAgcG9wdXBBZGRJbnB1dFBsYWNlLFxuICBwb3B1cEFkZElucHV0SHR0cHMsXG4gIGNhcmRzLFxuICBwb3B1cEltYWdlU2VsZWN0b3IsXG4gIHBvcHVwSW1hZ2UsXG4gIHBvcHVwUGxhY2UsXG4gIGltYWdlc0V4cGFuZENsb3NlLFxuICBmb3JtU2VsZWN0b3IsXG4gIGlucHV0U2VsZWN0b3IsXG4gIGNhcmRMaW5rLFxuICBjYXJkTmFtZSxcbiAgcG9wdXAsXG4gIHBvcHVwcyxcbiAgcG9wdXBzSW1hZ2UsXG4gIHBvcHVwc0FkZCxcbiAgcG9wdXBzVXNlckluZm8sXG4gIHByb2ZpbGVOYW1lLFxuICBwcm9maWxlQWJvdXQsXG4gIHByb2ZpbGVBdmF0YXIsXG4gIHBvcHVwQXZhdGFyLFxuICBwcm9maWxlQXZhdGFyRWRpdCxcbiAgcG9wdXBFcmFzZSxcbiAgcG9wdXBFcmFzZUNvbmZpcm0sXG4gIGlucHV0TmFtZSxcbiAgaW5wdXRKb2IsXG4gIGJ1dHRvbkF2YXRhclNhdmUsXG4gIGJ1dHRvbkF2YXRhclNhdmluZyxcbn07XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgdGhpcy5iYXNlVXJsID0gb3B0aW9ucy5iYXNlVXJsO1xuICAgIHRoaXMuaGVhZGVycyA9IG9wdGlvbnMuaGVhZGVycztcbiAgfVxuXG4gIC8vMi4gQ2FyZ2FyIGxhcyB0YXJqZXRhcyBkZXNkZSBlbCBzZXJ2aWRvclxuXG4gIGdldEluaXRpYWxDYXJkcygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCdFcnJvcjogJyArIHJlcy5zdGF0dXMpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9KTtcbiAgfVxuXG4gIC8vMS4gQ2FyZ2FyIGxhIGluZm9ybWFjacOzbiBkZWwgdXN1YXJpbyBkZXNkZSBlbCBzZXJ2aWRvclxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgIH0pXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ0Vycm9yOiAnICsgcmVzLnN0YXR1cyk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgLy8gMy4gRWRpdGFyIGVsIHBlcmZpbFxuXG4gIGVkaXRQZXJmaWwodXBkYXRlZERhdGEpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHVwZGF0ZWREYXRhKSxcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCdFcnJvcjogJyArIHJlcy5zdGF0dXMpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9KTtcbiAgfVxuXG4gIC8vNC4gQcOxYWRpciB1bmEgbnVldmEgdGFyamV0YVxuXG4gIGFkZE9yRGVsZXRlQ2FyZChjYXJkSWQsIG1ldGhvZCwgbmV3SW1hZ2UpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KG5ld0ltYWdlKSxcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCdFcnJvcjogJyArIHJlcy5zdGF0dXMpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9KTtcbiAgfVxuXG4gIGFkZENhcmQobmV3SW1hZ2UpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkobmV3SW1hZ2UpLFxuICAgIH0pXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ0Vycm9yOiAnICsgcmVzLnN0YXR1cyk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgLy84LiBhbmFkaXIgeSBlbGltaW5hciBcIm1lIGd1c3Rhc1wiXG5cbiAgYWRkT3JEZWxldGVMaWtlKGNhcmRJZCwgbWV0aG9kKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgfSlcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnRXJyb3I6ICcgKyByZXMuc3RhdHVzKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgfSk7XG4gIH1cblxuXG4gIC8vIDkuIEFjdHVhbGl6YXIgbGEgZm90byBkZSBwZXJmaWxcblxuICBlZGl0QXZhdGFyKHVwZGF0ZWRBdmF0YXIpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgICBtZXRob2Q6ICdQQVRDSCcsXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh1cGRhdGVkQXZhdGFyKSxcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCdFcnJvcjogJyArIHJlcy5zdGF0dXMpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IHsgcG9wdXBFcmFzZSB9IGZyb20gJy4vY29uc3RhbnRzJztcblxuaW1wb3J0IEFwaSBmcm9tICcuLi9jb21wb25lbnRzL0FwaSc7XG5cblxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6ICdodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL3dlYl9lc18wOScsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiAnMjRkYjczNTYtOWY3YS00NzBhLTk3OWUtOWVjM2YyNWY2ZjAyJyxcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihjYXJkSXRlbSwgdXNlciwgY2FyZFNlbGVjdG9yKSB7XG4gICAgdGhpcy5fbGluayA9IGNhcmRJdGVtLmxpbms7XG4gICAgdGhpcy5fbmFtZSA9IGNhcmRJdGVtLm5hbWU7XG4gICAgdGhpcy5fbGlrZXMgPSBjYXJkSXRlbS5saWtlcztcbiAgICB0aGlzLl9vd25lcklkID0gY2FyZEl0ZW0ub3duZXIuX2lkO1xuICAgIHRoaXMuX293bmVyTmFtZSA9IGNhcmRJdGVtLm93bmVyLm5hbWU7XG4gICAgdGhpcy5fY2FyZElkID0gY2FyZEl0ZW0uX2lkO1xuICAgIHRoaXMuX3VzZXJJZCA9IHVzZXIuX2lkO1xuICAgIHRoaXMuX3VzZXJOYW1lID0gdXNlci5uYW1lO1xuICAgIHRoaXMuX3VzZXIgPSB1c2VyO1xuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcbiAgICB0aGlzLl9jYXJkSXRlbSA9IGNhcmRJdGVtO1xuICB9XG5cbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkJylcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG5cbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XG4gIH1cblxuICBnZW5lcmF0ZUNhcmQoKSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG5cbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19uYW1lJykudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2xpbmsnKS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2xpbmsnKS5hbHQgPSBgaW1hZ2VuIGRlICR7dGhpcy5fbmFtZX1gO1xuXG5cblxuICAgIC8vNS4gbW9zdHJhciBsb3MgbWVndXN0YSBkZSB1bmEgdGFyamV0YSBkZXNkZSBsYSBVUkxcblxuICAgIC8vNi4geSA3LiBtb3N0cmFyIGVsIGJhc3VyZXJvIHNvbG8gYWwgdXN1c2FyaW9cblxuICAgIC8vY29uc29sZS5sb2codGhpcy5fdXNlcklkLHRoaXMuX293bmVySWQpXG5cbiAgICBpZiAodGhpcy5fdXNlcklkID09PSB0aGlzLl9vd25lcklkKSB7XG4gICAgICB0aGlzLl9lbGVtZW50XG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fdHJhc2gnKVxuICAgICAgICAuY2xhc3NMaXN0LmFkZCgnY2FyZF9fdHJhc2hfYWN0aXZlJyk7XG4gICAgfVxuXG5cblxuXG5cbiAgICBjb25zdCBjYXJkTGlrZUNvdW50ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGlrZS1jb3VudCcpO1xuICAgIGNhcmRMaWtlQ291bnQudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XG5cbiAgICAvLzYuIHkgNy4gbW9zdHJhciBlbCBiYXN1cmVybyBzb2xvIGFsIHVzdXNhcmlvXG5cbiAgICAvL2NvbnNvbGUubG9nKHRoaXMuX3VzZXJJZCx0aGlzLl9vd25lcklkKVxuXG4gICAgaWYgKHRoaXMuX3VzZXJJZCA9PT0gdGhpcy5fb3duZXJJZCkge1xuICAgICAgdGhpcy5fZWxlbWVudFxuICAgICAgICAucXVlcnlTZWxlY3RvcignLmNhcmRfX3RyYXNoJylcbiAgICAgICAgLmNsYXNzTGlzdC5hZGQoJ2NhcmRfX3RyYXNoX2FjdGl2ZScpO1xuICAgIH1cblxuICAgIC8vIDguMSB2YWxpZGFyIGNvbiBzb21lICBlbiBsYSBVUkwgc2kgIHlhIG1pIHVzdWFyaW8gZXN0YSBlc3RhIHJlZ2lzdHJhZG8sIGVzIGRlY2lyIHF1ciAgbGUgZGlvIGxpa2VcbiAgICAvLyBhIGFsZ3VuYSBjYXJ0YSBwYXJhIGFjdGl2YXIgZWwgY29yem9uXG5cbiAgICBpZiAodGhpcy5fbGlrZXMuc29tZSgobGlrZSkgPT4gbGlrZS5faWQgPT09IHRoaXMuX3VzZXJJZCkpIHtcbiAgICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19oZWFydCcpXG4gICAgICAgIC5jbGFzc0xpc3QuYWRkKCdjYXJkX19oZWFydF9hY3RpdmUnKTtcbiAgICB9XG5cbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cblxuICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuICBfbGlrZShldnQpIHtcbiAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoJ2NhcmRfX2hlYXJ0X2FjdGl2ZScpO1xuICB9XG5cbiAgX2Nsb3NlUG9wdXBFcmFzZSgpIHtcbiAgICBwb3B1cEVyYXNlLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCl7XG5cbiAgICAvLyA3LiAgdmFyaWFibGVzIGRlIGV2ZW50b3MgcGFyYSBhZ3JlZ2FyIHkgZWxpbWluYXIgdGFyamV0YXNcblxuICAgIGNvbnN0IGNhcmRUcmFzaCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX3RyYXNoJyk7XG4gICAgY29uc3QgcG9wdXBFcmFzZUNsb3NlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwLWVyYXNlX19jbG9zZScpO1xuICAgIGNvbnN0IHBvcHVwRXJhc2VDb25maXJtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwLWVyYXNlX19jb25maXJtJyk7XG5cbiAgICBjb25zdCBlcmFzZUNvbnRlbnQgPSAoKSA9PiB7XG4gICAgICBjb25zdCBjYXJkSWQgPSB0aGlzLl9jYXJkSWQ7XG4gICAgIC8vIGNvbnNvbGUubG9nKGlkSW1hZ2UpO1xuICAgICAgLy9hcGkuZXJhc2VDYXJkKGlkSW1hZ2UpO1xuICAgICAgYXBpLmFkZE9yRGVsZXRlQ2FyZChjYXJkSWQsICdERUxFVEUnKS50aGVuKCgpID0+IHtcbiAgICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICBwb3B1cEVyYXNlLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgIGNhcmRUcmFzaC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHBvcHVwRXJhc2UuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gICAgICBwb3B1cEVyYXNlQ29uZmlybS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGVyYXNlQ29udGVudCk7XG4gICAgfSk7XG5cbiAgICBwb3B1cEVyYXNlQ2xvc2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICB0aGlzLl9jbG9zZVBvcHVwRXJhc2UoKTtcbiAgICAgIHBvcHVwRXJhc2VDb25maXJtLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZXJhc2VDb250ZW50KTtcbiAgICB9KTtcblxuICAgIHBvcHVwRXJhc2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgIGlmIChldmVudC50YXJnZXQgPT09IHBvcHVwRXJhc2UpIHtcbiAgICAgICAgdGhpcy5fY2xvc2VQb3B1cEVyYXNlKCk7XG4gICAgICB9XG4gICAgICBwb3B1cEVyYXNlQ29uZmlybS5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGVyYXNlQ29udGVudCk7XG4gICAgfSk7XG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2ZW50KSA9PiB7XG4gICAgICBpZiAoZXZlbnQua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgICB0aGlzLl9jbG9zZVBvcHVwRXJhc2UoKTtcbiAgICAgIH1cbiAgICAgIHBvcHVwRXJhc2VDb25maXJtLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZXJhc2VDb250ZW50KTtcbiAgICB9KTtcblxuICAgIC8vIDguMiB2YWxpZGFyIHNpIHBvZGVtb3MgbGxhbWFyIGEgbGEgQXBpIHF1ZSBhZ3JlZ2FyIG8gcXVpdGFyIGxpa2VcblxuICAgIGNvbnN0IGNhcmRIZWFydCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2hlYXJ0Jyk7XG5cblxuICAgIGNhcmRIZWFydC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIGNvbnN0IGNhcmRJZCA9IHRoaXMuX2NhcmRJZDtcblxuICAgICAgY29uc29sZS5sb2cgKGNhcmRJZCk7XG4gICAgICAvL2NvbnNvbGUubG9nICh0aGlzLl9saWtlcyk7XG5cblxuICAgICAgaWYgKHRoaXMuX2xpa2VzLnNvbWUoKGxpa2UpID0+IGxpa2UuX2lkID09PSB0aGlzLl91c2VySWQpKSB7XG4gICAgICAgIGFwaS5hZGRPckRlbGV0ZUxpa2UoY2FyZElkLCAnREVMRVRFJykudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICB0aGlzLl9saWtlcyA9IHJlc3BvbnNlLmxpa2VzO1xuICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2xpa2UtY291bnQnKS50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzLmxlbmd0aDtcbiAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19oZWFydCcpLmNsYXNzTGlzdC5yZW1vdmUoJ2NhcmRfX2hlYXJ0X2FjdGl2ZScpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFwaS5hZGRPckRlbGV0ZUxpa2UoY2FyZElkLCAnUFVUJykudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICB0aGlzLl9saWtlcyA9IHJlc3BvbnNlLmxpa2VzO1xuICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2xpa2UtY291bnQnKS50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzLmxlbmd0aDtcbiAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19oZWFydCcpLmNsYXNzTGlzdC5hZGQoJ2NhcmRfX2hlYXJ0X2FjdGl2ZScpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcblxuICB9XG59XG4iLCJpbXBvcnQgeyBmb3JtU2VsZWN0b3IsIGlucHV0U2VsZWN0b3IgfSBmcm9tICcuL2NvbnN0YW50cy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcihmb3JtU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9mb3JtU2VsZWN0b3IgPSBmb3JtU2VsZWN0b3I7XG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGlucHV0U2VsZWN0b3I7XG4gIH1cblxuICBfc2hvd0Vycm9yKGZvcm1TZWxlY3RvciwgaW5wdXRTZWxlY3RvciwgZXJyb3JNZXNzYWdlKSB7XG4gICAgY29uc3QgZXJyb3JDbGFzcyA9IGZvcm1TZWxlY3Rvci5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dFNlbGVjdG9yLmlkfS1lcnJvcmApO1xuICAgIGlucHV0U2VsZWN0b3IuY2xhc3NMaXN0LmFkZCgnZm9ybV9faW5wdXRfdHlwZV9lcnJvcicpO1xuICAgIGVycm9yQ2xhc3MudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XG4gICAgZXJyb3JDbGFzcy5jbGFzc0xpc3QuYWRkKCdmb3JtX19lcnJvcl9hY3RpdmUnKTtcbiAgfVxuXG4gIF9oaWRlRXJyb3IoZm9ybVNlbGVjdG9yLCBpbnB1dFNlbGVjdG9yKSB7XG4gICAgY29uc3QgZXJyb3JDbGFzcyA9IGZvcm1TZWxlY3Rvci5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dFNlbGVjdG9yLmlkfS1lcnJvcmApO1xuICAgIGlucHV0U2VsZWN0b3IuY2xhc3NMaXN0LnJlbW92ZSgnZm9ybV9faW5wdXRfdHlwZV9lcnJvcicpO1xuICAgIGVycm9yQ2xhc3MuY2xhc3NMaXN0LnJlbW92ZSgnZm9ybV9fZXJyb3JfYWN0aXZlJyk7XG4gICAgZXJyb3JDbGFzcy50ZXh0Q29udGVudCA9ICcnO1xuICB9XG5cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShmb3JtU2VsZWN0b3IsIGlucHV0U2VsZWN0b3IpIHtcbiAgICBpZiAoIWlucHV0U2VsZWN0b3IudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIC8vIFNpIE5PIGxvIGVzICghKSwgbXVlc3RyYSBlbCBlbGVtZW50byBlcnLDs25lb1xuICAgICAgdGhpcy5fc2hvd0Vycm9yKFxuICAgICAgICBmb3JtU2VsZWN0b3IsXG4gICAgICAgIGlucHV0U2VsZWN0b3IsXG4gICAgICAgIGlucHV0U2VsZWN0b3IudmFsaWRhdGlvbk1lc3NhZ2VcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFNpIGVzIHbDoWxpZG8sIG9jdWx0YSBlbCBlbGVtZW50byBlcnLDs25lb1xuICAgICAgdGhpcy5faGlkZUVycm9yKGZvcm1TZWxlY3RvciwgaW5wdXRTZWxlY3Rvcik7XG4gICAgfVxuICB9XG5cbiAgX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpIHtcbiAgICAvLyBpdGVyYSBzb2JyZSBlbCBhcnJheSB1dGlsaXphbmRvIGVsIG3DqXRvZG8gc29tZSgpXG4gICAgcmV0dXJuIGlucHV0TGlzdC5zb21lKChpbnB1dFNlbGVjdG9yKSA9PiB7XG4gICAgICAvLyBTaSBlbCBjYW1wbyBubyBlcyB2w6FsaWRvLCBlbCBjYWxsYmFjayBkZXZvbHZlcsOhIHRydWUuXG4gICAgICAvLyBFbCBtw6l0b2RvIHNlIGRldGVuZHLDoSBlbnRvbmNlcywgeSBsYSBmdW5jacOzbiBoYXNJbnZhbGlkSW5wdXQoKSBkZXZvbHZlcsOhIHRydWVcbiAgICAgIC8vIGhhc0ludmFsaWRJbnB1dCBkZXZ1ZWx2ZSB0cnVlXG5cbiAgICAgIHJldHVybiAhaW5wdXRTZWxlY3Rvci52YWxpZGl0eS52YWxpZDtcbiAgICB9KTtcbiAgfVxuXG4gIF90b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIHN1Ym1pdEJ1dHRvblNlbGVjdG9yKSB7XG4gICAgLy8gU2kgaGF5IGFsIG1lbm9zIHVuYSBlbnRyYWRhIHF1ZSBubyBlcyB2w6FsaWRhXG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpKSB7XG4gICAgICAvLyBoYWNlIHF1ZSBlbCBib3TDs24gZXN0w6kgaW5hY3Rpdm9cbiAgICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yLmNsYXNzTGlzdC5hZGQoJ2Zvcm1fX2J1dHRvbl9pbmFjdGl2ZScpO1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChldmVudCkgPT4ge1xuICAgICAgICBpZiAoZXZlbnQua2V5ID09PSAnRW50ZXInKSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGVuIGNhc28gY29udHJhcmlvLCBsbyBoYWNlIGFjdGl2b1xuICAgICAgc3VibWl0QnV0dG9uU2VsZWN0b3IuY2xhc3NMaXN0LnJlbW92ZSgnZm9ybV9fYnV0dG9uX2luYWN0aXZlJyk7XG4gICAgfVxuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKGZvcm1TZWxlY3Rvcikge1xuICAgIC8vIEVuY3VlbnRyYSB0b2RvcyBsb3MgY2FtcG9zIGRlbnRybyBkZWwgZm9ybXVsYXJpbyB5XG4gICAgLy8gY3JlYSB1biBhcnJheSBhIHBhcnRpciBkZSBlc3RvcywgdXRpbGl6YW5kbyBlbCBtw6l0b2RvIEFycmF5LmZyb20oKVxuICAgIGNvbnN0IGlucHV0TGlzdCA9IEFycmF5LmZyb20oZm9ybVNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3JBbGwoJy5mb3JtX19pbnB1dCcpKTtcbiAgICBjb25zdCBzdWJtaXRCdXR0b25TZWxlY3RvciA9IGZvcm1TZWxlY3Rvci5xdWVyeVNlbGVjdG9yKCcuZm9ybV9fYnV0dG9uJyk7XG4gICAgLy8gTGxhbWEgYSB0b2dnbGVCdXR0b25TdGF0ZSgpIGFudGVzIGRlIGVtcGV6YXIgYSBkZXRlY3RhciBlbCBldmVudG8gZGUgZW50cmFkYVxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuICAgIC8vIEl0ZXJhIHNvYnJlIGVsIGFycmF5IG9idGVuaWRvXG4gICAgaW5wdXRMaXN0LmZvckVhY2goKGlucHV0U2VsZWN0b3IpID0+IHtcbiAgICAgIC8vIGFncmVnYSBlbCBjb250cm9sYWRvciBkZSBldmVudG9zIGRlIGVudHJhZGEgYSBjYWRhIGNhbXBvXG4gICAgICBpbnB1dFNlbGVjdG9yLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xuICAgICAgICAvLyBMbGFtYSBhIGxhIGZ1bmNpw7NuIGNoZWNoSW5wdXRWYWxpZGl0eSgpIGRlbnRybyBkZWwgY2FsbGJhY2tcbiAgICAgICAgLy8geSBww6FzYWxlIGVsIGZvcm11bGFyaW8geSBlbCBlbGVtZW50byBhIGNvbXByb2JhclxuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoZm9ybVNlbGVjdG9yLCBpbnB1dFNlbGVjdG9yKTtcbiAgICAgICAgLy8gTGxhbWEgYSB0b2dnbGVCdXR0b25TdGF0ZSgpIHkgcMOhc2FsZSB1biBhcnJheSBkZSBjYW1wb3MgeSBlbCBib3TDs25cbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBzdWJtaXRCdXR0b25TZWxlY3Rvcik7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgLy8gRW5jb250cmFyw6EgdG9kb3MgbG9zIGZvcm11bGFyaW9zIGNvbiBsYSBjbGFzZSBlc3BlY2lmaWNhZGEgZW4gZWwgRE9NIHlcbiAgICAvLyBjcmVhcsOhIHVuIGFycmF5LCBhIHBhcnRpciBkZSBlc3RvcywgdXRpbGl6YW5kbyBlbCBtw6l0b2RvIEFycmF5LmZyb20oKVxuICAgIGNvbnN0IGZvcm1MaXN0ID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZm9ybScpKTtcbiAgICAvLyBJdGVyYSBzb2JyZSBlbCBhcnJheSBvYnRlbmlkb1xuICAgIGZvcm1MaXN0LmZvckVhY2goKGZvcm1TZWxlY3RvcikgPT4ge1xuICAgICAgZm9ybVNlbGVjdG9yLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcbiAgICAgICAgLy8gQ2FuY2VsYSBlbCBjb21wb3J0YW1pZW50byBwb3IgZGVmZWN0byBkZSBjYWRhIGZvcm11bGFyaW9cbiAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9KTtcblxuICAgICAgLy8gTGxhbWEgYSBsYSBmdW5jacOzbiBzZXRFdmVudExpc3RlbmVycygpIHBhcmEgY2FkYSBmb3JtdWxhcmlvXG4gICAgICAvLyB0b21hbmRvIHVuIGVsZW1lbnRvIGRlbCBmb3JtdWxhcmlvIGNvbW8gYXJndW1lbnRvXG4gICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycyhmb3JtU2VsZWN0b3IpO1xuICAgIH0pO1xuICB9XG59XG5cbmNvbnN0IHZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1TZWxlY3Rvcik7XG5cbnZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG4iLCJpbXBvcnQgeyBwb3B1cHMgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3Ioc2VsZWN0b3JQb3B1cCkge1xuICAgIHRoaXMuX3NlbGVjdG9yUG9wdXAgPSBzZWxlY3RvclBvcHVwO1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICBwb3B1cHMuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gIH1cblxuICAvLyBoYXkgcXVlIHZhY2lhciBsYSBzZWNjaW9uIHBvcHVwcyBjYWRhIHZleiAgc2UgYWJyYSBsYSBpbWFnZW5cblxuICBjbG9zZSgpIHtcbiAgICBwb3B1cHMuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gIH1cblxuICBfaGFuZGxlRXNjQ2xvc2UoZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQgPT09ICdFc2NhcGUnKSB7XG4gICAgICBwb3B1cHMuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgfVxuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fZWxlbWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX19jbG9zZScpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmNsb3NlKTtcblxuICAgIHBvcHVwcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xuICAgICAgaWYgKGV2ZW50LnRhcmdldCA9PT0gcG9wdXBzKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZXZlbnQpID0+IHtcbiAgICAgIGlmIChldmVudC5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IHsgcG9wdXBzSW1hZ2UgfSBmcm9tICcuLi9jb21wb25lbnRzL2NvbnN0YW50cyc7XG5pbXBvcnQgUG9wdXAgZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3RvcihzZWxlY3RvclBvcHVwKSB7XG4gICAgc3VwZXIoc2VsZWN0b3JQb3B1cCk7XG4gIH1cblxuICBfZ2V0VGVtcGxhdGVQb3B1cCgpIHtcbiAgICBjb25zdCB0ZXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zZWxlY3RvclBvcHVwKTtcblxuICAgIGNvbnN0IHBvcHVwRWxlbWVudCA9IHRlc3QuY29udGVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fY29udGFpbmVyJylcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG5cbiAgICByZXR1cm4gcG9wdXBFbGVtZW50O1xuICB9XG5cbiAgX2dlbmVyYXRlUG9wdXAoKSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlUG9wdXAoKTtcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxuXG4gIF9jbG9zZSgpIHtcbiAgICBwb3B1cHNJbWFnZS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcbiAgfVxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKCcuZm9ybV9fY2xvc2UnKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICBzdXBlci5jbG9zZSgpO1xuICAgICAgICB0aGlzLl9jbG9zZSgpO1xuICAgICAgfSk7XG5cbiAgICBwb3B1cHNJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xuICAgICAgY29uc3QgcG9wdXBDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2NvbnRhaW5lcicpO1xuXG4gICAgICBpZiAoZXZlbnQudGFyZ2V0ID09PSBwb3B1cHNJbWFnZSB8fCBwb3B1cENvbnRhaW5lcikge1xuICAgICAgICBzdXBlci5jbG9zZSgpO1xuICAgICAgICB0aGlzLl9jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChldmVudCkgPT4ge1xuICAgICAgaWYgKGV2ZW50LmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcbiAgICAgICAgdGhpcy5fY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIG9wZW4oeyBzcmMsIGFsdCwgdGV4dCB9KSB7XG4gICAgc3VwZXIub3BlbigpO1xuICAgIHBvcHVwc0ltYWdlLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xuXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlJykuc3JjID0gc3JjO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbWFnZScpLmFsdCA9IGFsdDtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fcGxhY2UnKS50ZXh0Q29udGVudCA9IHRleHQ7XG5cbiAgICBwb3B1cHNJbWFnZS5hcHBlbmQodGhpcy5fZWxlbWVudCk7XG5cbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG59XG4iLCJpbXBvcnQgeyBwb3B1cHMsIHBvcHVwc0FkZCwgY2FyZHMgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmltcG9ydCBQb3B1cCBmcm9tICcuL1BvcHVwJztcblxuXG5pbXBvcnQgQXBpIGZyb20gJy4vQXBpJztcblxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6ICdodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL3dlYl9lc18wOScsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiAnMjRkYjczNTYtOWY3YS00NzBhLTk3OWUtOWVjM2YyNWY2ZjAyJyxcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgfVxuXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcbiAgICBjb25zdCBpbnAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3NlbGVjdG9yUG9wdXApO1xuXG4gICAgY29uc3QgcG9wdXBFbGVtZW50ID0gaW5wLmNvbnRlbnQucXVlcnlTZWxlY3RvcignI2FkZC1mb3JtJykuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgcmV0dXJuIHBvcHVwRWxlbWVudDtcbiAgfVxuXG4gIF9nZW5lcmF0ZUZvcm1Qb3B1cCgpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKTtcblxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xuICB9XG5cbiAgX2hhbmRsZUFkZEZvcm1TdWJtaXQoZXZ0KSB7XG4gICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAvLyBjbG9uYXIgbm9kbyAgcGFyYSBtYXJjbyBkZSBsYSB0YXJqZXRhIChlbGVtZW50KVxuXG4gICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkJykuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgLy8gdmFyaWFibGVzIHBhcmEgZXZlbnRvc1xuXG4gICAgY29uc3QgZWxlbWVudEltYWdlID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGluaycpO1xuICAgIGNvbnN0IGVsZW1lbnRQbGFjZSA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX25hbWUnKTtcbiAgICBjb25zdCBlbGVtZW50SGVhcnQgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19oZWFydCcpO1xuICAgIGNvbnN0IGVsZW1lbnRUcmFzaCA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX3RyYXNoJyk7XG4gICAgY29uc3QgZWxlbWVudExpa2VDb3VudCA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2xpa2UtY291bnQnKTtcblxuXG5cbiAgICBjb25zdCBidXR0b25BZGRTYXZlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2J1dHRvbi1hZGQtc2F2ZScpO1xuICAgIGNvbnN0IGJ1dHRvbkFkZFNhdmluZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNidXR0b24tYWRkLXNhdmluZycpO1xuXG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGQtZm9ybScpO1xuXG4gICAgY29uc3QgdGV4dElucHV0UGxhY2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGV4dC1pbnB1dC1wbGFjZScpO1xuICAgIGNvbnN0IHVybElucHV0SW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdXJsLWlucHV0LWltYWdlJyk7XG5cbiAgICAvL2FncmVnYXIgZGF0b3MgZGVsIGZvcm11bGFyaW8gaW5ncmVzYWRvcyBwb3IgZWwgdXN1YXJpbyBwYXJhIGxhIHRhcmpldGFcblxuICAgIGVsZW1lbnRJbWFnZS5zcmMgPSB1cmxJbnB1dEltYWdlLnZhbHVlO1xuICAgIGVsZW1lbnRJbWFnZS5hbHQgPSBgaW1hZ2VuIGRlICR7dXJsSW5wdXRJbWFnZS52YWx1ZX1gO1xuICAgIGVsZW1lbnRQbGFjZS50ZXh0Q29udGVudCA9IHRleHRJbnB1dFBsYWNlLnZhbHVlO1xuICAgIGVsZW1lbnRIZWFydC5jbGFzc0xpc3QucmVtb3ZlKCdjYXJkX19oZWFydF9hY3RpdmUnKTtcbiAgICBlbGVtZW50VHJhc2guY2xhc3NMaXN0LmFkZCgnY2FyZF9fdHJhc2hfYWN0aXZlJyk7XG4gICAgZWxlbWVudExpa2VDb3VudC50ZXh0Q29udGVudCA9ICcwJztcblxuICAgIC8vIDQuIGFncmVnYXIgbnVldmEgdGFyamV0YSBhIGxhIFVSTFxuXG4gICAgLy9jb25zdHJ1aXIgb2JqZXRvIGEgYWdyZWdhclxuXG4gICAgY29uc3QgbGluayA9IGVsZW1lbnRJbWFnZS5zcmM7XG4gICAgY29uc3QgbmFtZSA9IGVsZW1lbnRQbGFjZS50ZXh0Q29udGVudDtcblxuXG4gICAgY29uc3QgbmV3SW1hZ2UgPSB7IGxpbms6IGxpbmssIG5hbWU6IG5hbWV9O1xuXG4gICAgYnV0dG9uQWRkU2F2ZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIGJ1dHRvbkFkZFNhdmluZy5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICBidXR0b25BZGRTYXZlLnN0eWxlLnBvaW50ZXIgPSAnbm9uZSc7XG5cbiAgICBhcGkuYWRkQ2FyZChuZXdJbWFnZSkudGhlbigocmVzcG9uc2UpID0+IHtcblxuICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgICAgYnV0dG9uQWRkU2F2ZS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcblxuICAgICAgYnV0dG9uQWRkU2F2aW5nLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICBwb3B1cHNBZGQuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgICBwb3B1cHMuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgICBhcGkuZ2V0SW5pdGlhbENhcmRzKCk7XG4gICAgICBmb3JtLnJlc2V0KCk7XG4gICAgICAvL2xvY2F0aW9uLnJlbG9hZCgpO1xuICAgIH0pO1xuXG4gICAgLy8gY29uZmlndXJhciAgZWwgYm90b24gZGUgbWUgZ3VzdGFcblxuICAgIGVsZW1lbnRIZWFydC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldnQpID0+IHtcbiAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LnRvZ2dsZSgnY2FyZF9faGVhcnRfYWN0aXZlJyk7XG4gICAgfSk7XG5cbiAgICAvLyBhZ3JlZ2FyIGxhIHRhcmpldGEgbnVldmEgYWwgR3JpZFxuXG4gICAgY2FyZHMucHJlcGVuZChlbGVtZW50KTtcblxuXG5cbiAgICBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7XG4gIH1cblxuICBfY2xvc2UoKSB7XG4gICAgcG9wdXBzQWRkLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIGNvbnN0IGFkZEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkLWZvcm0nKTtcblxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICB0aGlzLl9lbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcignLmZvcm1fX2Nsb3NlJylcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcbiAgICAgICAgdGhpcy5fY2xvc2UoKTtcbiAgICAgIH0pO1xuXG4gICAgcG9wdXBzQWRkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG4gICAgICBpZiAoZXZlbnQudGFyZ2V0ID09PSBwb3B1cHNBZGQpIHtcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcbiAgICAgICAgdGhpcy5fY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZXZlbnQpID0+IHtcbiAgICAgIGlmIChldmVudC5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XG4gICAgICAgIHRoaXMuX2Nsb3NlKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAoZXZlbnQua2V5ID09PSAnRW50ZXInKSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIC8vdGhpcy5faGFuZGxlQWRkRm9ybVN1Ym1pdCgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgYWRkRm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCB0aGlzLl9oYW5kbGVBZGRGb3JtU3VibWl0KTtcblxuICAgIGFkZEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICdrZXlkb3duJyxcbiAgICAgIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoZXZlbnQua2V5ID09PSAnRW50ZXInKSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAvLyBFdml0YSBlbCBjb21wb3J0YW1pZW50byBwcmVkZXRlcm1pbmFkbyBkZSBlbnZpYXIgZWwgZm9ybXVsYXJpb1xuICAgICAgICAgIHRoaXMuX2hhbmRsZUFkZEZvcm1TdWJtaXQoZXZlbnQpO1xuICAgICAgICB9XG4gICAgICB9LmJpbmQodGhpcylcbiAgICApO1xuICB9XG5cbiAgX29wZW4oKSB7XG4gICAgc3VwZXIub3BlbigpO1xuXG4gICAgcG9wdXBzQWRkLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xuXG4gICAgcG9wdXBzQWRkLmFwcGVuZCh0aGlzLl9lbGVtZW50KTtcblxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbn1cbiIsImltcG9ydCB7XG4gIHBvcHVwc1VzZXJJbmZvLFxuICBwcm9maWxlTmFtZSxcbiAgcHJvZmlsZUFib3V0LFxufSBmcm9tICcuLi9jb21wb25lbnRzL2NvbnN0YW50cyc7XG5cbmltcG9ydCBBcGkgZnJvbSAnLi9BcGknO1xuXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcbiAgYmFzZVVybDogJ2h0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvd2ViX2VzXzA5JyxcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246ICcyNGRiNzM1Ni05ZjdhLTQ3MGEtOTc5ZS05ZWMzZjI1ZjZmMDInLFxuICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3RvcihzZWxlY3RvclVzZXIpIHtcbiAgICB0aGlzLl9zZWxlY3RvclVzZXIgPSBzZWxlY3RvclVzZXI7XG4gIH1cblxuICBfZ2V0VGVtcGxhdGVVc2VyKCkge1xuICAgIGNvbnN0IHRlc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3NlbGVjdG9yVXNlcik7XG5cbiAgICBjb25zdCB1c2VyRWxlbWVudCA9IHRlc3QuY29udGVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoJyNwcm9maWxlLWZvcm0nKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcblxuICAgIHJldHVybiB1c2VyRWxlbWVudDtcbiAgfVxuXG4gIF9nZW5lcmF0ZVVzZXIoKSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlVXNlcigpO1xuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xuICB9XG5cbiAgX2hhbmRsZVVzZXJGb3JtU3VibWl0KGV2dCkge1xuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgLy8gZGVjbGFyYXIgdmFyaWFibGVzIGRlbCBudWV2byBlbGVtZW50ICggZXZlbnRvIGlucHV0KVxuICAgIGNvbnN0IGlucHV0TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0ZXh0LWlucHV0LW5hbWUnKTtcbiAgICBjb25zdCBpbnB1dEpvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0ZXh0LWlucHV0LWFib3V0Jyk7XG4gICAgLy9jb25zdCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Byb2ZpbGUtZm9ybScpO1xuXG4gICAgcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSBpbnB1dE5hbWUudmFsdWU7XG4gICAgcHJvZmlsZUFib3V0LnRleHRDb250ZW50ID0gaW5wdXRKb2IudmFsdWU7XG5cbiAgICBjb25zdCBidXR0b25Vc2VyU2F2ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNidXR0b24tdXNlci1zYXZlJyk7XG4gICAgY29uc3QgYnV0dG9uVXNlclNhdmluZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNidXR0b24tdXNlci1zYXZpbmcnKTtcblxuICAgIC8vMy4gZWRpdGFyIGVsIHBlcmZpbCBkZXNkZSBsYSBVUkxcblxuICAgIGNvbnN0IG5hbWUgPSBwcm9maWxlTmFtZS50ZXh0Q29udGVudDtcbiAgICBjb25zdCBhYm91dCA9IHByb2ZpbGVBYm91dC50ZXh0Q29udGVudDtcblxuICAgIGNvbnN0IHVwZGF0ZWREYXRhID0geyBuYW1lOiBuYW1lLCBhYm91dDogYWJvdXQgfTtcblxuICAgIGJ1dHRvblVzZXJTYXZpbmcuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG5cbiAgICBidXR0b25Vc2VyU2F2ZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXG4gICAgYXBpLmVkaXRQZXJmaWwodXBkYXRlZERhdGEpLnRoZW4oKCkgPT4ge1xuICAgICAgLy9jb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICBidXR0b25Vc2VyU2F2ZS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgIGJ1dHRvblVzZXJTYXZpbmcuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIHBvcHVwc1VzZXJJbmZvLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xuICAgIH0pO1xuXG4gICAgLy9mb3JtLnJlc2V0KCk7XG4gIH1cblxuICBfY2xvc2UoKSB7XG4gICAgcG9wdXBzVXNlckluZm8uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgY29uc3QgcHJvZmlsZUZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJvZmlsZS1mb3JtJyk7XG5cbiAgICB0aGlzLl9lbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcignLmZvcm1fX2Nsb3NlJylcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2Nsb3NlKTtcblxuICAgIHBvcHVwc1VzZXJJbmZvLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG4gICAgICBpZiAoZXZlbnQudGFyZ2V0ID09PSBwb3B1cHNVc2VySW5mbykge1xuICAgICAgICB0aGlzLl9jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChldmVudCkgPT4ge1xuICAgICAgaWYgKGV2ZW50LmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgICAgdGhpcy5fY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHByb2ZpbGVGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIHRoaXMuX2hhbmRsZVVzZXJGb3JtU3VibWl0KTtcblxuICAgIHByb2ZpbGVGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAna2V5ZG93bicsXG4gICAgICBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gJ0VudGVyJykge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgLy8gRXZpdGEgZWwgY29tcG9ydGFtaWVudG8gcHJlZGV0ZXJtaW5hZG8gZGUgZW52aWFyIGVsIGZvcm11bGFyaW9cbiAgICAgICAgICB0aGlzLl9oYW5kbGVVc2VyRm9ybVN1Ym1pdChldmVudCk7XG4gICAgICAgIH1cbiAgICAgIH0uYmluZCh0aGlzKVxuICAgICk7XG4gIH1cblxuICBfb3BlbigpIHtcbiAgICBwb3B1cHNVc2VySW5mby5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcblxuICAgIC8vY29uc29sZS5sb2codGhpcy5fZWxlbWVudCk7XG5cbiAgICAvLyBkZWNsYXJhciB2YXJpYWJsZXMgZGVsIG51ZXZvIGVsZW1lbnQgKGlucHV0cylcbiAgICBjb25zdCBpbnB1dE5hbWUgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0ZXh0LWlucHV0LW5hbWUnKTtcbiAgICBjb25zdCBpbnB1dEpvYiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignI3RleHQtaW5wdXQtYWJvdXQnKTtcblxuICAgIC8vIGNhcmdhciB2YWxvcmVzIGFsb3MgaW5wdXRzXG4gICAgaW5wdXROYW1lLnZhbHVlID0gcHJvZmlsZU5hbWUudGV4dENvbnRlbnQ7XG4gICAgaW5wdXRKb2IudmFsdWUgPSBwcm9maWxlQWJvdXQudGV4dENvbnRlbnQ7XG5cbiAgICBwb3B1cHNVc2VySW5mby5hcHBlbmQodGhpcy5fZWxlbWVudCk7XG5cbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG59XG4iLCJpbXBvcnQge1xuICBwcm9maWxlQXZhdGFyLFxuICBwb3B1cEF2YXRhcixcbiAgYnV0dG9uQXZhdGFyU2F2ZSxcbiAgYnV0dG9uQXZhdGFyU2F2aW5nLFxufSBmcm9tICcuLi9jb21wb25lbnRzL2NvbnN0YW50cyc7XG5cbmltcG9ydCBBcGkgZnJvbSAnLi9BcGknO1xuXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcbiAgYmFzZVVybDogJ2h0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvd2ViX2VzXzA5JyxcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246ICcyNGRiNzM1Ni05ZjdhLTQ3MGEtOTc5ZS05ZWMzZjI1ZjZmMDInLFxuICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXZhdGFyIHtcbiAgY29uc3RydWN0b3Ioc2VsZWN0b3JBdmF0YXIpIHtcbiAgICB0aGlzLl9zZWxlY3RvckF2YXRhciA9IHNlbGVjdG9yQXZhdGFyO1xuICB9XG5cbiAgX2dldFRlbXBsYXRlQXZhdGFyKCkge1xuICAgIGNvbnN0IGF2YXRhckVsZW1lbnQgPSBkb2N1bWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoJyNhdmF0YXItZm9ybScpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgcmV0dXJuIGF2YXRhckVsZW1lbnQ7XG4gIH1cblxuICBfZ2VuZXJhdGVBdmF0YXIoKSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlQXZhdGFyKCk7XG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cblxuICBfY2xvc2UoKSB7XG4gICAgLy9wb3B1cEF2YXRhci5jbGFzc0xpc3QuYWRkKCdoaWRlJyk7XG5cbiAgICBwb3B1cEF2YXRhci5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcbiAgfVxuXG4gIHJlbmRlckxvYWRpbmcoaXNMb2FkaW5nKSB7XG4gICAgaWYgKGlzTG9hZGluZykge1xuICAgICAgYnV0dG9uQXZhdGFyU2F2ZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgYnV0dG9uQXZhdGFyU2F2aW5nLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIH0gZWxzZSB7XG4gICAgICBidXR0b25BdmF0YXJTYXZlLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgYnV0dG9uQXZhdGFyU2F2aW5nLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgfVxuICB9XG5cbiAgX2hhbmRsZUF2YXRhclN1Ym1pdChldnQpIHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAvLyBkZWNsYXJhciB2YXJpYWJsZXMgZGVsIG51ZXZvIGVsZW1lbnQgKCBldmVudG8gaW5wdXQpXG5cbiAgICBjb25zdCBpbnB1dEF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN1cmwtaW5wdXQtYXZhdGFyJyk7XG5cbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2F2YXRhci1mb3JtJyk7XG5cbiAgICBwcm9maWxlQXZhdGFyLnNyYyA9IGlucHV0QXZhdGFyLnZhbHVlO1xuXG4gICAgLy8zLiBlZGl0YXIgZWwgcGVyZmlsIGEgbGEgbGEgVVJMXG5cbiAgICBjb25zdCBhdmF0YXIgPSBwcm9maWxlQXZhdGFyLnNyYztcblxuICAgIGNvbnN0IHVwZGF0ZWRBdmF0YXIgPSB7IGF2YXRhcjogYXZhdGFyIH07XG5cbiAgICAvL3RoaXMucmVuZGVyTG9hZGluZyh0cnVlKTtcblxuICAgIGJ1dHRvbkF2YXRhclNhdmUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICBidXR0b25BdmF0YXJTYXZpbmcuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG5cbiAgICBhcGkuZWRpdEF2YXRhcih1cGRhdGVkQXZhdGFyKS50aGVuKCgpID0+IHtcbiAgICAgIC8vY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgICAgYnV0dG9uQXZhdGFyU2F2ZS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgIGJ1dHRvbkF2YXRhclNhdmluZy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgcG9wdXBBdmF0YXIuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgfSk7XG5cbiAgICBmb3JtLnJlc2V0KCk7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgY29uc3QgYXZhdGFyRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhdmF0YXItZm9ybScpO1xuXG4gICAgZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKCcjYXZhdGFyLWZvcm0tY2xvc2UnKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fY2xvc2UpO1xuXG4gICAgcG9wdXBBdmF0YXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgIGlmIChldmVudC50YXJnZXQgPT09IHBvcHVwQXZhdGFyKSB7XG4gICAgICAgIHRoaXMuX2Nsb3NlKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2ZW50KSA9PiB7XG4gICAgICBpZiAoZXZlbnQua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgICB0aGlzLl9jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgYXZhdGFyRm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCB0aGlzLl9oYW5kbGVBdmF0YXJTdWJtaXQpO1xuXG4gICAgYXZhdGFyRm9ybS5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgJ2tleWRvd24nLFxuICAgICAgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGlmIChldmVudC5rZXkgPT09ICdFbnRlcicpIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIC8vIEV2aXRhIGVsIGNvbXBvcnRhbWllbnRvIHByZWRldGVybWluYWRvIGRlIGVudmlhciBlbCBmb3JtdWxhcmlvXG4gICAgICAgICAgdGhpcy5faGFuZGxlQXZhdGFyU3VibWl0KGV2ZW50KTtcbiAgICAgICAgfVxuICAgICAgfS5iaW5kKHRoaXMpXG4gICAgKTtcbiAgfVxuXG4gIF9vcGVuKCkge1xuICAgIHBvcHVwQXZhdGFyLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xuXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxufVxuIiwiaW1wb3J0ICcuL2luZGV4LmNzcyc7XG5cbmltcG9ydCBTZWN0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbic7XG5pbXBvcnQgQ2FyZCBmcm9tICcuLi9jb21wb25lbnRzL0NhcmQnO1xuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSAnLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yJztcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlJztcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybSc7XG5pbXBvcnQgVXNlckluZm8gZnJvbSAnLi4vY29tcG9uZW50cy9Vc2VySW5mbyc7XG5pbXBvcnQgQXZhdGFyIGZyb20gJy4uL2NvbXBvbmVudHMvQXZhdGFyJztcbmltcG9ydCBBcGkgZnJvbSAnLi4vY29tcG9uZW50cy9BcGknO1xuXG5pbXBvcnQge1xuICBidXR0b25QbGFjZSxcbiAgYnV0dG9uRWRpdCxcbiAgcHJvZmlsZUF2YXRhckVkaXQsXG4gIHByb2ZpbGVOYW1lLFxuICBwcm9maWxlQWJvdXQsXG4gIHByb2ZpbGVBdmF0YXIsXG59IGZyb20gJy4uL2NvbXBvbmVudHMvY29uc3RhbnRzJztcblxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6ICdodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL3dlYl9lc18wOScsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiAnMjRkYjczNTYtOWY3YS00NzBhLTk3OWUtOWVjM2YyNWY2ZjAyJyxcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICB9LFxufSk7XG5cbi8vIDEuIG9idGVuZXIgZGF0b3MgZGVsIHVzdWFyaW8gZGUgbGEgVVJMIHkgMi4gb2J0ZW5lciB5IGNhcmdhciBsYXMgdGFyamV0YXMgZGVzZGUgbGEgVVJMXG5hcGkuZ2V0SW5pdGlhbENhcmRzKCkudGhlbigoZGF0YSkgPT4ge1xuICBhcGkuZ2V0VXNlckluZm8oKS50aGVuKCh1c2VyKSA9PiB7XG4gICAgcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSB1c2VyLm5hbWU7XG4gICAgcHJvZmlsZUFib3V0LnRleHRDb250ZW50ID0gdXNlci5hYm91dDtcbiAgICBwcm9maWxlQXZhdGFyLnNyYyA9IHVzZXIuYXZhdGFyO1xuXG4gICAgLy9jb25zb2xlLmxvZyhkYXRhLHVzZXIpO1xuXG4gICAgY29uc3QgY2FyZHNMaXN0ID0gbmV3IFNlY3Rpb24oXG4gICAgICB7XG4gICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgIHJlbmRlcmVyOiAoY2FyZEl0ZW0pID0+IHtcbiAgICAgICAgICBjb25zdCBjYXJkID0gbmV3IENhcmQoY2FyZEl0ZW0sIHVzZXIsICcuY2FyZC10ZW1wbGF0ZScpO1xuXG4gICAgICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xuXG4gICAgICAgICAgY2FyZHNMaXN0LmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgICcuY2FyZHMnXG4gICAgKTtcblxuICAgIGNhcmRzTGlzdC5yZW5kZXJJdGVtcygpO1xuICB9KTtcbn0pO1xuXG4vL1BvcHVwIGZvcm11bGFyaW8gcGFyYSBJbmZvcm1hY2lvbiBkZWwgVXN1YXJpb1xuXG5jb25zdCBwb3B1cFVzZXJGb3JtID0gbmV3IFVzZXJJbmZvKCcucG9wdXAtdXNlci10ZW1wbGF0ZScpO1xuXG5wb3B1cFVzZXJGb3JtLl9nZW5lcmF0ZVVzZXIoKTtcblxuYnV0dG9uRWRpdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgcG9wdXBVc2VyRm9ybS5fb3BlbigpO1xuXG4gIGNvbnN0IHZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKCcuZm9ybScpO1xuXG4gIHZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG59KTtcblxuLy9Qb3B1cCBmb3JtdWxhcmlvIHBhcmEgY2FtYmlhciBlbCBhdmF0YXJcblxuY29uc3QgcG9wdXBBdmF0YXJGb3JtID0gbmV3IEF2YXRhcignLnBvcHVwLUF2YXRhcicpO1xuXG5wb3B1cEF2YXRhckZvcm0uX2dlbmVyYXRlQXZhdGFyKCk7XG5cbnByb2ZpbGVBdmF0YXJFZGl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICBwb3B1cEF2YXRhckZvcm0uX29wZW4oKTtcbn0pO1xuXG4vLyBQb3B1cCAgem9vbiBkZSBsYSBpbWFnZW4gZGUgbGEgY2FyZFxuXG5jb25zdCBwb3B1cEltZyA9IG5ldyBQb3B1cFdpdGhJbWFnZSgnLnBvcHVwLWltYWdlLXRlbXBsYXRlJyk7XG5cbnBvcHVwSW1nLl9nZW5lcmF0ZVBvcHVwKCk7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2dCkgPT4ge1xuICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2NhcmRfX2xpbmsnKSkge1xuICAgIGNvbnN0IHAgPSBldnQudGFyZ2V0LnBhcmVudEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX25hbWUnKTtcblxuICAgIGNvbnN0IGltYWdlSW5mbyA9IHtcbiAgICAgIHNyYzogZXZ0LnRhcmdldC5zcmMsXG4gICAgICBhbHQ6IGV2dC50YXJnZXQuYWx0LFxuICAgICAgdGV4dDogcC50ZXh0Q29udGVudCxcbiAgICB9O1xuXG4gICAgcG9wdXBJbWcub3BlbihpbWFnZUluZm8pO1xuICB9XG59KTtcblxuLy8gUG9wdXAgZm9ybXVsYXJpbyBkZSBjcmVhciBjYXJ0YXNcblxuY29uc3QgcG9wdXBBZGRGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oJy5wb3B1cC1mb3JtLXRlbXBsYXRlJyk7XG5cbnBvcHVwQWRkRm9ybS5fZ2VuZXJhdGVGb3JtUG9wdXAoKTtcblxuYnV0dG9uUGxhY2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIHBvcHVwQWRkRm9ybS5fb3BlbigpO1xuXG4gIC8vY29uc29sZS5sb2coJ3ZpZW5lIFBvcHVwV2l0aCcpO1xuXG4gIGNvbnN0IHZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKCcuZm9ybScpO1xuXG4gIHZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG59KTtcbiJdLCJuYW1lcyI6WyJTZWN0aW9uIiwiX3JlZiIsImNvbnRhaW5lclNlbGVjdG9yIiwiZGF0YSIsInJlbmRlcmVyIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9yZW5kZXJlZEl0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImtleSIsInZhbHVlIiwiZWxlbWVudCIsImFwcGVuZCIsIl90aGlzIiwiZm9yRWFjaCIsIml0ZW0iLCJwcm9maWxlTmFtZSIsImdldEVsZW1lbnRCeUlkIiwicHJvZmlsZUFib3V0IiwiYnV0dG9uRWRpdCIsImJ1dHRvblBsYWNlIiwiY2FyZHMiLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwicG9wdXBzIiwicG9wdXBzSW1hZ2UiLCJwb3B1cHNBZGQiLCJwb3B1cHNVc2VySW5mbyIsInBvcHVwRXJhc2UiLCJwcm9maWxlQXZhdGFyIiwicG9wdXBBdmF0YXIiLCJwcm9maWxlQXZhdGFyRWRpdCIsImJ1dHRvbkF2YXRhclNhdmUiLCJidXR0b25BdmF0YXJTYXZpbmciLCJBcGkiLCJvcHRpb25zIiwiYmFzZVVybCIsImhlYWRlcnMiLCJmZXRjaCIsImNvbmNhdCIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwidXBkYXRlZERhdGEiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImNhcmRJZCIsIm5ld0ltYWdlIiwidXBkYXRlZEF2YXRhciIsImFwaSIsImF1dGhvcml6YXRpb24iLCJDYXJkIiwiY2FyZEl0ZW0iLCJ1c2VyIiwiY2FyZFNlbGVjdG9yIiwiX2xpbmsiLCJsaW5rIiwiX25hbWUiLCJuYW1lIiwiX2xpa2VzIiwibGlrZXMiLCJfb3duZXJJZCIsIm93bmVyIiwiX2lkIiwiX293bmVyTmFtZSIsIl9jYXJkSWQiLCJfdXNlcklkIiwiX3VzZXJOYW1lIiwiX3VzZXIiLCJfY2FyZFNlbGVjdG9yIiwiX2NhcmRJdGVtIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9lbGVtZW50IiwiX2dldFRlbXBsYXRlIiwidGV4dENvbnRlbnQiLCJzcmMiLCJhbHQiLCJjbGFzc0xpc3QiLCJhZGQiLCJsZW5ndGgiLCJzb21lIiwibGlrZSIsIl9zZXRFdmVudExpc3RlbmVycyIsImV2dCIsInRhcmdldCIsInRvZ2dsZSIsInJlbW92ZSIsIl90aGlzMiIsImNhcmRUcmFzaCIsInBvcHVwRXJhc2VDbG9zZSIsInBvcHVwRXJhc2VDb25maXJtIiwiZXJhc2VDb250ZW50IiwiYWRkT3JEZWxldGVDYXJkIiwic3R5bGUiLCJkaXNwbGF5IiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9jbG9zZVBvcHVwRXJhc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJhZGRPckRlbGV0ZUxpa2UiLCJyZXNwb25zZSIsIkZvcm1WYWxpZGF0b3IiLCJfZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckNsYXNzIiwiaWQiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVFcnJvciIsIl9zaG93RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImlucHV0TGlzdCIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2hhc0ludmFsaWRJbnB1dCIsInByZXZlbnREZWZhdWx0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl90b2dnbGVCdXR0b25TdGF0ZSIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJlbmFibGVWYWxpZGF0aW9uIiwiUG9wdXAiLCJzZWxlY3RvclBvcHVwIiwiX3NlbGVjdG9yUG9wdXAiLCJjbG9zZSIsIlBvcHVwV2l0aEltYWdlIiwiX1BvcHVwIiwiX2luaGVyaXRzIiwiX3N1cGVyIiwiY2FsbCIsIl9nZXRUZW1wbGF0ZVBvcHVwIiwiX2dldCIsIl9nZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsIl9jbG9zZSIsInBvcHVwQ29udGFpbmVyIiwidGV4dCIsIlBvcHVwV2l0aEZvcm0iLCJwb3B1cFNlbGVjdG9yIiwiX2dldElucHV0VmFsdWVzIiwiZWxlbWVudEltYWdlIiwiZWxlbWVudFBsYWNlIiwiZWxlbWVudEhlYXJ0IiwiZWxlbWVudFRyYXNoIiwiZWxlbWVudExpa2VDb3VudCIsImJ1dHRvbkFkZFNhdmUiLCJidXR0b25BZGRTYXZpbmciLCJmb3JtIiwidGV4dElucHV0UGxhY2UiLCJ1cmxJbnB1dEltYWdlIiwicG9pbnRlciIsImFkZENhcmQiLCJnZXRJbml0aWFsQ2FyZHMiLCJyZXNldCIsInByZXBlbmQiLCJhZGRGb3JtIiwiX2hhbmRsZUFkZEZvcm1TdWJtaXQiLCJiaW5kIiwiVXNlckluZm8iLCJzZWxlY3RvclVzZXIiLCJfc2VsZWN0b3JVc2VyIiwiX2dldFRlbXBsYXRlVXNlciIsImlucHV0TmFtZSIsImlucHV0Sm9iIiwiYnV0dG9uVXNlclNhdmUiLCJidXR0b25Vc2VyU2F2aW5nIiwiYWJvdXQiLCJlZGl0UGVyZmlsIiwicHJvZmlsZUZvcm0iLCJfaGFuZGxlVXNlckZvcm1TdWJtaXQiLCJBdmF0YXIiLCJzZWxlY3RvckF2YXRhciIsIl9zZWxlY3RvckF2YXRhciIsIl9nZXRUZW1wbGF0ZUF2YXRhciIsImlzTG9hZGluZyIsImlucHV0QXZhdGFyIiwiYXZhdGFyIiwiZWRpdEF2YXRhciIsImF2YXRhckZvcm0iLCJfaGFuZGxlQXZhdGFyU3VibWl0IiwiZ2V0VXNlckluZm8iLCJjYXJkc0xpc3QiLCJjYXJkRWxlbWVudCIsImdlbmVyYXRlQ2FyZCIsImFkZEl0ZW0iLCJyZW5kZXJJdGVtcyIsInBvcHVwVXNlckZvcm0iLCJfZ2VuZXJhdGVVc2VyIiwiX29wZW4iLCJwb3B1cEF2YXRhckZvcm0iLCJfZ2VuZXJhdGVBdmF0YXIiLCJwb3B1cEltZyIsIl9nZW5lcmF0ZVBvcHVwIiwiY29udGFpbnMiLCJwIiwicGFyZW50RWxlbWVudCIsImltYWdlSW5mbyIsIm9wZW4iLCJwb3B1cEFkZEZvcm0iLCJfZ2VuZXJhdGVGb3JtUG9wdXAiXSwic291cmNlUm9vdCI6IiJ9